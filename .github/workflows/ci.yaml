name: CI
on: [pull_request]

jobs:
  ci-lint:
    name: Lint
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install
        run: npm ci --legacy-peer-deps
        id: install

      - name: Run prettier
        run: npm run format:check

      - name: Run ESLint
        run: npm run lint
        # Always run the linter:
        # https://stackoverflow.com/a/58859404
        if: success() || failure()

      - name: Run tsc
        run: npm run typecheck
        # Always run the typechecker:
        # https://stackoverflow.com/a/58859404
        if: success() || failure()

  ci-build:
    name: Build
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install
        run: npm ci --legacy-peer-deps

      # Make sure the site builds
      - name: Build
        run: npm run build
        env:
          CI: "true"

  ci-build-resume:
    name: Build resume
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      # Make sure the resume compiles
      - name: Compile resume
        uses: xu-cheng/latex-action@v2
        with:
          root_file: |
            ./src/resume/main.tex
          latexmk_use_xelatex: true
      - name: Add compiled PDF to artifacts
        uses: actions/upload-artifact@v3
        with:
          name: resume
          path: |
            ./main.pdf
        # Skip when running locally in https://github.com/nektos/act:
        if: ${{ !env.ACT }}

  # Uses "paths-filter" to only run the job when the resume source changes:
  # https://github.com/dorny/paths-filter
  ci-check-resume-placeholder:
    name: Placeholder check
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Check to see if source changed
        uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            src:
              - 'src/resume/placeholder.tex'
        # Skip when running locally in https://github.com/nektos/act:
        if: ${{ !env.ACT }}
      - name: Assign filter result to variable
        run: |
          # If running locally in act, consider the source to have changed:
          if [ -n "${{ env.ACT }}" ]; then
            echo "src_changed=true" >> $GITHUB_ENV
          else
            echo "src_changed=${{ steps.filter.outputs.src }}" >> $GITHUB_ENV
          fi

      # Every step after this will only run if the source changed, by including
      # the following condition:
      # if: ${{ env.src_changed == 'true' }}

      - name: Compile PDF
        uses: xu-cheng/latex-action@v2
        with:
          root_file: |
            ./src/resume/placeholder.tex
        if: ${{ env.src_changed == 'true' }}
      - name: Prepare artifacts
        run: |
          mkdir -p ./artifacts
          cp ./placeholder.pdf ./artifacts/modified.pdf
          cp ./static/resume/azevedo-joseph.pdf ./artifacts/original.pdf
        if: ${{ env.src_changed == 'true' }}
      - name: Add compiled PDF to artifacts
        uses: actions/upload-artifact@v3
        with:
          name: placeholder-resume
          path: |
            ./artifacts
        # Skip when running locally in https://github.com/nektos/act:
        if: ${{ !env.ACT && env.src_changed == 'true' }}

      # Compare the compiled PDF with the one in the repository using:
      # https://github.com/bgeron/diff-pdf-visually
      - name: Install poppler-utils
        run: |
          sudo apt-get update
          sudo apt-get install -y poppler-utils
        if: env.src_changed == 'true'
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"
        if: env.src_changed == 'true'
      - name: Install diff-pdf-visually
        run: |
          pip install --user diff-pdf-visually
        if: env.src_changed == 'true'
      - name: Compare PDFs
        run: |
          PIP_INSTALL_LOCATION=$(python -c 'import os,sysconfig;print(sysconfig.get_path("scripts",f"{os.name}_user"))')
          exit_status=0
          $PIP_INSTALL_LOCATION/diff-pdf-visually -v ./placeholder.pdf ./static/resume/azevedo-joseph.pdf || exit_status=$?
          if [ $exit_status -eq 0 ]; then
            echo "The placeholder resume PDF is up to date."
          else
            echo "The placeholder resume PDF is out of date. Please recompile the PDF from source (/src/resume/placeholder.tex)."
            exit 1
          fi

  # Uses "paths-filter" to only run the job when the risk-game demo source changes:
  # https://github.com/dorny/paths-filter
  ci-check-risk-game-demo:
    name: Risk game demo check
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Check to see if source changed
        uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            src:
              - 'content/projects/risk-game/local/demo/vue-embed/**'
              - 'content/projects/risk-game/demo/**'
        # Skip when running locally in https://github.com/nektos/act:
        if: ${{ !env.ACT }}
      - name: Assign filter result to variable
        run: |
          # If running locally in act, consider the source to have changed:
          if [ -n "${{ env.ACT }}" ]; then
            echo "src_changed=true" >> $GITHUB_ENV
          else
            echo "src_changed=${{ steps.filter.outputs.src }}" >> $GITHUB_ENV
          fi

      # Every step after this will only run if the source changed, by including
      # the following condition:
      # if: ${{ env.src_changed == 'true' }}

      - name: Copy original before build
        run: |
          cp -r ./content/projects/risk-game/demo /tmp/original-risk-game-demo
        if: ${{ env.src_changed == 'true' }}
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18
        if: ${{ env.src_changed == 'true' }}
      - name: Install
        run: npm ci --legacy-peer-deps
        working-directory: ./content/projects/risk-game/local/demo/vue-embed
        if: ${{ env.src_changed == 'true' }}
      - name: Build
        run: content/projects/risk-game/local/demo/build-embed.sh
        if: ${{ env.src_changed == 'true' }}
      - name: Prepare artifacts
        run: |
          mkdir -p ./artifacts
          cp -r ./content/projects/risk-game/demo ./artifacts/modified
          cp -r /tmp/original-risk-game-demo ./artifacts/original
        if: ${{ env.src_changed == 'true' }}
      - name: Add compiled files to artifacts
        uses: actions/upload-artifact@v3
        with:
          name: risk-game-demo
          path: |
            ./artifacts
        # Skip when running locally in https://github.com/nektos/act:
        if: ${{ !env.ACT && env.src_changed == 'true' }}

      # Compare the compiled files with the ones in the repository using:
      # https://github.com/dorny/paths-filter:
      - name: Check to see if compiled files changed
        uses: dorny/paths-filter@v2
        id: check-changed
        with:
          base: HEAD
          filters: |
            compiled:
              - 'content/projects/risk-game/demo/**'
        # Skip when running locally in https://github.com/nektos/act:
        if: ${{ !env.ACT && env.src_changed == 'true' }}
      - name: Assign filter result to variable
        run: |
          # If running locally in act, then there's nothing to compare against:
          if [ -n "${{ env.ACT }}" ]; then
            echo "compiled_changed=false" >> $GITHUB_ENV
          else
            echo "compiled_changed=${{ steps.check-changed.outputs.compiled }}" >> $GITHUB_ENV
          fi
        if: ${{ env.src_changed == 'true' }}
      - name: Fail if compiled files changed
        run: |
          if [ "${{ env.compiled_changed }}" == "true" ]; then
            echo "The compiled files are out of date. Please recompile the files from source."
            exit 1
          fi
        if: ${{ env.src_changed == 'true' }}
